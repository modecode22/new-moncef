--- 
import { ViewTransitions } from 'astro:transitions';
import Header from '../components/Header.astro'
type Props= {
	  description: string;
	title: string;
}
const { title,description } = Astro.props;
---

<!DOCTYPE html>
<html lang="en" x-cloak x-data :class="{ 'dark': $store.theme.isDark }" >
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
		<title>{title}</title>
		<ViewTransitions />
    
	</head>
  
	<body class=" bg-light-50 h-screen transition-all w-full dark:bg-dark-900 text-light-950 dark:text-dark-50  ">
    <Header />
    <main class=" py-10
       mx-auto max-w-2xl px-4 sm:px-6 lg:max-w-7xl lg:px-8">
      <slot />
</main>
		  <style is:global>
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700&display=swap');


*{
font-family: 'Montserrat', sans-serif;}
      [x-cloak] {
        display: none !important;
      }
    </style>
   <script>
      import Alpine from 'alpinejs';
      import collapse from '@alpinejs/collapse';

      Alpine.plugin(collapse);

      Alpine.store('theme', {
        init() {
          this.isDark = (() => {
            if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
              return localStorage.getItem('theme') === 'dark';
            }
            if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
              return true;
            }
            return false;
          })();
        },

        isDark: false,

        toggle() {
          this.isDark = !this.isDark;
          localStorage.setItem('theme', this.isDark ? 'dark' : 'light');
        },
      });

      window.Alpine = Alpine;
      Alpine.start();
    </script>
	</body>


</html>
